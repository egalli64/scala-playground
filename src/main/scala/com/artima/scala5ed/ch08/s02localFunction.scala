/*
  Programming in Scala, 5th Edition - source code shown in the book
  Download the zip file from: https://booksites.artima.com/programming_in_scala_5ed

  https://github.com/egalli64/scala-playground

  Functions and Closures - Local functions
  Alternative approach to private method, more fine-grained, visible only in the current scope
 */
package com.artima.scala5ed.ch08

@main
def s02local(): Unit =
  // First refactoring of padLines() - local function

  /**
   * The function available to user - it pads the lines passed as a string
   *
   * @param text
   *   could contain more lines separated by \n
   * @param minWidth
   *   if a line is shorter, it would be left-padded with blanks
   * @return
   *   the padded input
   */
  def padLines(text: String, minWidth: Int): String =
    /**
     * A _local_ function, accessible only in the scope
     *
     * @param line
     *   the input line
     * @param minWidth
     *   the minimal line length, when padded
     * @return
     *   the padded input line
     */
    def padLine(line: String, minWidth: Int): String =
      if line.length >= minWidth then line
      else " " * (minWidth - line.length) + line

    /**
     * A local variable whose value is generated by calling the local function in a for loop
     */
    val paddedLines = for line <- text.linesIterator yield padLine(line, minWidth)

    // the function result value
    paddedLines.mkString("\n")

  val text = "a\nab\nabc\nabba"
  println("input:\n" + text)

  val padded = padLines(text, 4)
  println("output:\n" + padded)

  // Second refactoring of padLines()

  /** The parameters of the outer function are visible inside its local functions */
  def padLines2(text: String, minWidth: Int): String =
    /** No need to pass minWidth explicitly */
    def padLine(line: String): String =
      if line.length >= minWidth then line
      else " " * (minWidth - line.length) + line
    val paddedLines = for line <- text.linesIterator yield padLine(line)
    paddedLines.mkString("\n")

  println("*** Version 2 ***")
  println(padLines2(text, 4))
