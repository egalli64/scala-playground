/*
  https://docs.scala-lang.org/scala3/book/fun-write-method-returns-function.html
  https://github.com/egalli64/scala-playground

  Functions - Creating a Method That Returns a Function
 */
package com.github.egalli64.scala3.b08

@main
def funGen(): Unit =
  /**
   * A generator
   *
   * @return
   *   a function that generate a string consumer
   */
  def greet(): String => Unit =
    name => println(s"Hello, $name")

  // Put in greeter the function generated by greet()
  val greeter = greet()

  // Use the consumer
  greeter("Tom")

  /**
   * An improved generator
   *
   * @return
   *   a function that generate a string consumer
   */
  def greet2(intro: String): String => Unit =
    name => println(s"$intro, $name")

  // Generate a greeter and execute it
  greet2("Hi")("Tom")

  /**
   * A more real-world example: a method that returns functions that greet people in different
   * languages.
   *
   * @param desiredLanguage
   *   the language to use
   * @return
   *   a function greeting in the required language
   */
  def createGreetingFunction(desiredLanguage: String): String => Unit = desiredLanguage match
    case "english" => name => println(s"Hello, $name")
    case "french"  => name => println(s"Bonjour, $name")
    case _         => name => println(s"Mhm, $name")

  createGreetingFunction("french")("Jonathan")
  createGreetingFunction("english")("Joe")
  createGreetingFunction("unknown")("Tom")
