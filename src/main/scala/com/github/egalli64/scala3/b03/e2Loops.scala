/*
  https://docs.scala-lang.org/scala3/book/control-structures.html
  https://github.com/egalli64/scala-playground

  For and while loops
 */
package com.github.egalli64.scala3.b03

@main
def loops(): Unit =
  // 1. Looping on a sequence
  val values = Seq(1, 2, 3)

  print("Printing all the elements in a sequence: ")
  // The _generator_ uses the operator <- (take from) to extract each value from the sequence
  for value <- values do print(value + " ")
  println()

  // 1b. Multiline block
  print("More code for each iteration: ")
  for value <- values do
    val x = value * 2
    print(s"[$value -> $x] ")
  println()

  // 2. Looping on a range
  print("Printing all the elements in a range: ")
  for i <- 1 to 10 do print(i + " ")
  println()

  // 2.1 More generators
  println("Multiple generators:")
  for
    i <- 1 to 2
    j <- 'a' to 'b'
    k <- 0 to 10 by 10
  do println(s"$i, $j, $k")

  // 3 Guard
  print("Guard in a for: ")
  for
    i <- 1 to 10
    if i % 2 == 0
  do print(i + " ")
  println()

  // 3.1 More guards in a for
  print("Complex rule with guards in a for: ")
  for
    i <- 1 to 10
    if i > 3
    if i < 6
    if i % 2 == 0
  do println(i)

  // 4. For and map
  val states = Map("FR" -> "France", "IT" -> "Italy", "DE" -> "Germany")
  println("Looping on a map:")
  // key/value in a tuple
  for (key, value) <- states do println(s"$key: $value")

  // 5. For-yield expression
  print("Vector generated by for-yield on a range: ")
  val numbers = for i <- 1 to 10 yield i * 2
  println(numbers)
  print("In real life, we would use map() here: ")
  println((1 to 10).map(i => i * 2))

  // 5.2 For-yield with block
  print("Block after yield for a more complex job: ")
  val names = List("_olivia", "_walter", "_peter")
  val capNames = for name <- names yield
    val nameWithoutUnderscore = name.drop(1)
    nameWithoutUnderscore.capitalize
  println(capNames)

  // 5.3 For-yield as a method body
  def between3and10(xs: List[Int]): List[Int] =
    for
      x <- xs
      if x >= 3
      if x <= 10
    yield x

  println("Calling a method based on for-yield: " + between3and10(List(1, 3, 7, 11)))

  // 6 While loop
  print("Loop by while: ")
  var i = 0
  while i < 3 do
    print(i + " ")
    i += 1
  println()
