/*
  Programming in Scala, 5th Edition - source code shown in the book
  Download the zip file from: https://booksites.artima.com/programming_in_scala_5ed

  https://github.com/egalli64/scala-playground

  Givens - Anonymous givens

  There is no need to specify the name of a given when it is defined. When not provided, it is generated by the compiler
 */
package com.artima.scala5ed.ch21

@main
def s3_anonymous(): Unit =
  trait Ord[T]:
    def compare(x: T, y: T): Int
    def lteq(x: T, y: T): Boolean = compare(x, y) < 1

  def sort[T](xs: List[T])(using ord: Ord[T]): List[T] =
    if xs.isEmpty then Nil else insert(xs.head, sort(xs.tail))

  def insert[T](x: T, xs: List[T])(using ord: Ord[T]): List[T] =
    if xs.isEmpty || ord.lteq(x, xs.head) then x :: xs else xs.head :: insert(x, xs.tail)

  // defining the anonymous givens
  given Ord[Int] with
    def compare(x: Int, y: Int): Int = if x == y then 0 else if x > y then 1 else 1
  given Ord[String] with
    def compare(s: String, t: String): Int = s.compareTo(t)

  // using the anonymous givens, accordingly to their type
  println(sort(List(10, 4, -10)))
  println(sort(List("cherry", "blackberry", "apple", "pear")))
